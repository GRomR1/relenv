name: CI

on:
  push:
    branches:
      - main
    inputs:
      kind:
        required: false
        type: choise
        description: Kind of build to run
        options:
          - dev
          - nigthly
          - release
        default: dev
  pull_request:
    branches:
      - main
    inputs:
      kind:
        required: false
        type: choise
        description: Kind of build to run
        options:
          - dev
          - nigthly
          - release
        default: dev
  workflow_dispatch:
    branches:
      - test
    inputs:
      kind:
        required: false
        type: choise
        description: Kind of build to run
        options:
          - dev
          - nigthly
          - release
        default: dev
    inputs:
      version:
        required: false
        type: string
        description: Version to author

permissions:
  contents: read

jobs:
  get-changed-files:
    name: Get Changed Files
    runs-on: ubuntu-latest
    permissions:
      contents: read  # for dorny/paths-filter to fetch a list of changed files
      pull-requests: read  # for dorny/paths-filter to read pull requests
    outputs:
      changed-files: ${{ toJSON(steps.changed-files.outputs) }}
    steps:
      - uses: actions/checkout@v3
      - name: Get Changed Files
        id: changed-files
        uses: dorny/paths-filter@v2
        with:
          token: ${{ github.token }}
          list-files: json
          filters: |
            repo:
              - added|modified:
                - '**'
            deleted:
              - deleted:
                - '**'
            toolchain:
              - added|modified:
                - 'relenv/toolchain.py'
                - 'relenv/_toolchain/**'

  pre-commit:
    name: Pre-Commit
    uses: ./.github/workflows/pre-commit-action.yml
    needs:
      - get-changed-files
    with:
      changed-files: ${{ needs.get-changed-files.outputs.changed-files }}

  build-python-package:
    name: Python Package
    uses: ./.github/workflows/package-action.yml
    if: always()
    needs:
      - pre-commit
    with:
      version: "${{ inputs.version }}"

  build:
    name: Python Builds
    uses: ./.github/workflows/build-action.yml
    needs:
      - get-changed-files
    with:
      changed-files: ${{ needs.get-changed-files.outputs.changed-files }}

  toolchain:
    name: Toolchain Builds
    uses: ./.github/workflows/toolchain-action.yml
    needs:
      - get-changed-files
    with:
      changed-files: ${{ needs.get-changed-files.outputs.changed-files }}

  test:
    name: Test
    needs:
      - get-changed-files
    uses: ./.github/workflows/test-action.yml
    with:
      changed-files: ${{ needs.get-changed-files.outputs.changed-files }}

  docs:
    name: Docs
    needs:
      - get-changed-files
    uses: ./.github/workflows/docs-action.yml
    with:
      changed-files: ${{ needs.get-changed-files.outputs.changed-files }}

  upload-build-artifacts:
    name: Deploy Build
    if: ${{ inputs.kind == "release" && success() }}
    uses: ./.github/workflows/deploy-build-action.yml
    needs:
      - build
    with:
      version: "${{ inputs.version }}"
    secrets:
      SSHKEY: "${{ secrets.SSHKEY }}"

  upload-toolchain-artifacts:
    name: Deploy Toolchain
    if: ${{ inputs.kind == "release" && success() }}
    uses: ./.github/workflows/deploy-build-action.yml
    needs:
      - toolchain
    with:
      version: "${{ inputs.version }}"
    secrets:
      SSHKEY: "${{ secrets.SSHKEY }}"

  deploy-python-package:
    name: Deploy Python Package
    uses: ./.github/workflows/deploy-package-action.yml
    if: always()
    needs:
      - pre-commit
      - build
      - toolchain
      - test
      - docs
      - upload-build-artifacts
      - upload-toolchain-artifacts
    with:
      kind: "${{ inputs.kind }}"

  set-pipeline-exit-status:
    # This step is just so we can make github require this step, to pass checks
    # on a pull request instead of requiring all
    name: Set the ${{ github.workflow }} Pipeline Exit Status
    runs-on: ubuntu-latest
    if: always()
    needs:
      - pre-commit
      - build
      - toolchain
      - test
      - docs
      - upload-build-artifacts
      - upload-toolchain-artifacts
    steps:
    - name: Download Exit Status Files
      if: always()
      uses: actions/download-artifact@v3
      with:
        name: exitstatus
        path: exitstatus

    - name: Delete Exit Status Artifacts
      if: always()
      uses: geekyeggo/delete-artifact@v2
      with:
        name: exitstatus
        failOnError: false

    - name: Set Pipeline Exit Status
      run: |
        tree exitstatus
        grep -RE 'failure|cancelled' exitstatus/ && exit 1 || exit 0

    - name: Done
      if: always()
      run:
        echo "All worflows finished"
